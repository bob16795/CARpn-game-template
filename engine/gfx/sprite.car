import "engine/utils/graphics.car"
import "engine/utils/texture.car"
import "engine/utils/shader.car"
import "engine/gfx/vert.car"

struct Sprite {
  Rect source

  Texture* tex

  i32 VBO

  def proc new Rect Texture* : Sprite {
    Sprite result    

    result.tex swap =
    result.source swap =

    1 result.VBO glGenBuffers

    result@
  }

  def proc free Sprite* : void {
    => self

    1 self.VBO glDeleteBuffers
  }

  def proc draw Sprite* Rect Shader* : void {
    => shd
    => bounds
    => self

    Vert [4] verts

    shd Shader.use

    self@.source => source
    
    verts [1] .x bounds.x =
    verts [1] .y bounds.y =
    verts [1] .u source.x =
    verts [1] .v source.y =
    verts [1] .z 0.0 =
    verts [1] .r 1.0 =
    verts [1] .g 1.0 =
    verts [1] .b 1.0 =
    verts [1] .a 1.0 =

    verts [2] .x bounds.x bounds.w + =
    verts [2] .y bounds.y bounds.h + =
    verts [2] .u source.x source.w + =
    verts [2] .v source.y source.h + =
    verts [2] .z 0.0 =
    verts [2] .r 1.0 =
    verts [2] .g 1.0 =
    verts [2] .b 1.0 =
    verts [2] .a 1.0 =

    verts [0] .x bounds.x =
    verts [0] .y bounds.y bounds.h + =
    verts [0] .u source.x =
    verts [0] .v source.y source.h + =
    verts [0] .z 0.0 =
    verts [0] .r 1.0 =
    verts [0] .g 1.0 =
    verts [0] .b 1.0 =
    verts [0] .a 1.0 =
    
    verts [3] .x bounds.x bounds.w + =
    verts [3] .y bounds.y =
    verts [3] .u source.x source.w + =
    verts [3] .v source.y =
    verts [3] .z 0.0 =
    verts [3] .r 1.0 =
    verts [3] .g 1.0 =
    verts [3] .b 1.0 =
    verts [3] .a 1.0 =

    34962
    self.VBO@
    glBindBuffer
    
    34962
    4 Vert.SIZE *
    verts
    35048
    glBufferData

    0 3 5126 0 Vert.SIZE 0 f32.SIZE * void*' glVertexAttribPointer
    1 2 5126 0 Vert.SIZE 3 f32.SIZE * void*' glVertexAttribPointer
    2 4 5126 0 Vert.SIZE 5 f32.SIZE * void*' glVertexAttribPointer
    0 glEnableVertexAttribArray
    1 glEnableVertexAttribArray
    2 glEnableVertexAttribArray
    
    5 0 4 glDrawArrays
  }
}
  
