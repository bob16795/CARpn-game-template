import "engine/utils/graphics.car"
import "engine/utils/input.car"
import "engine/utils/audio.car"
import "engine/gfx/sprite.car"

def proc getTexShaders : ShaderFile$* {
  ShaderFile$* result

  result ShaderFile.SIZE i32' 2 calloc =

  result@[0].contents u8$*$*.SIZE i32' 1 calloc =
  result@[0].kind 35633 =
  result@[0].count 1 =
  result@[0].contents@ u8$**'
  embed "static/tex.vert" =

  result@[1].contents u8$*$*.SIZE i32' 1 calloc =
  result@[1].kind 35632 =
  result@[1].count 1 =
  result@[1].contents@ u8$**'
  embed "static/tex.frag" =

  result@
}

const WIDTH 640.0
const HEIGHT 480.0

fntype proc loopfn : void
extern proc emscripten_set_main_loop loopfn : void
extern proc emscripten_cancel_main_loop : void
extern proc emscripten_get_now : f64

global gctx GFXContext*
global gspr Sprite
global gshd Shader*
global gtex Texture
global gsound Sound
global pos Vec2
global vel Vec2
global lastTime f64

def proc ondone : void {
  emscripten_cancel_main_loop
}

def proc loop : void {
  f64 dt

  dt emscripten_get_now lastTime @ - =
  lastTime emscripten_get_now =

  gctx@ GFXContext.clear
  pos pos@ vel@ dt@ f32' 1000.0 / Vec2.mul Vec2.add =

  pos.x@ 0.0 < if {
    vel.x vel.x@ -1.0 * =
    pos.x 0.0 =
    gsound Audio.playSound
  }
  
  pos.y@ 0.0 < if {
    vel.y vel.y@ -1.0 * =
    pos.y 0.0 =
    gsound Audio.playSound
  }

  pos.x@ 128.0 + WIDTH > if {
    vel.x vel.x@ -1.0 * =
    pos.x WIDTH f32' 128.0 - =
    gsound Audio.playSound
  }

  pos.y@ 128.0 + HEIGHT > if {
    vel.y vel.y@ -1.0 * =
    pos.y HEIGHT f32' 128.0 - =
    gsound Audio.playSound
  }

  gspr pos.x@ pos.y@ 128.0 128.0 Rect.new gshd@ Sprite.draw
  gctx@ GFXContext.swap

  Input.instance.done@ if {
    vel.x vel.x@ 1.05 * =
    vel.y vel.y@ 1.05 * =
  }
}

def proc main : i32 {
  gctx GFXContext.init =
  gctx@ Input.init
  Audio.init

  gshd getTexShaders 2 Shader.new =
  gshd@ WIDTH HEIGHT Vec2.new Shader.setSize

  3042 glEnable
  770 771 glBlendFunc

  gtex "logo.png" Texture.new =

  gsound "test.wav" Sound.new =

  vel 25.0 25.0 Vec2.new =
  pos 0.0 0.0 Vec2.new =

  gspr 0.0 0.0 1.0 1.0 Rect.new gtex Sprite.new =

  (loop) emscripten_set_main_loop

  0
}
